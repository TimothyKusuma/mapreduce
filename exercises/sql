 1. Change the mapper so that you calculate the sum for each category (not payment type).
SELECT category, SUM(amount) 
FROM transactions 
GROUP BY category;


2. Change the reducer so that you calculate the total number (count) of purchases for each category (not the sum of the sales).
SELECT category, COUNT(*) AS count
FROM transactions
GROUP BY category;


3. Change the mapper so that an error is raised when there are not six elements in the tuple.

CREATE TABLE transactions (
  date DATE,
  time TIME,
  location VARCHAR(255),
  category VARCHAR(255),
  amount DECIMAL(10, 2),
  payment_type VARCHAR(255)
);

ALTER TABLE transactions
ADD CONSTRAINT tuple_length_check CHECK (array_length(string_to_array(line, E'\t'), 1) = 6);


INSERT INTO transactions (date, time, location, category, amount, payment_type)
VALUES ('2012-12-31', '16:26', 'Anaheim', 'Men''s Clothing', 205.96, 'Discover');

INSERT INTO transactions (date, time, location, category, amount, payment_type)
VALUES ('2012-12-31', '16:26', 'Charlotte', 'CDs', 11.32, 'MasterCard');

INSERT INTO transactions (date, time, location, category, amount, payment_type)
VALUES ('2012-12-31', '16:26', 'Irvine', 'Men''s Clothing', 436, 'Visa');

INSERT INTO transactions (date, time, location, category, amount, payment_type)
VALUES ('2012-12-31', '16:26', 'Columbus', 'Men''s Clothing', 9.02, 'Discover');

INSERT INTO transactions (date, time, location, category, amount, payment_type)
VALUES ('2012-12-31', '16:26', 'Jacksonville', 'Children''s Clothing', 480.9, 'Amex');

INSERT INTO transactions (date, time, location, category, amount, payment_type)
VALUES ('2012-12-31', '16:26', 'Milwaukee', 'CDs', 31.27, 'Cash');


4. Change the mapper so that you calculate the sum only for the categories "Computers", "Cameras" and "Video Games".

SELECT category, SUM(amount) AS total_sum
FROM transactions
WHERE category IN ('Computers', 'Cameras', 'Video Games')
GROUP BY category


5. Change the reducer, so that only categories are shown, that have a total number (count) of more than 114 purchases.

SELECT category, COUNT(*) AS total_count
FROM transactions
GROUP BY category
HAVING COUNT(*) > 114;


6. Change the reducer so that you calculate the average sales per category.

SELECT category, AVG(amount) AS average_sales
FROM transactions
GROUP BY category;



